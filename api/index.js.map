{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "/home/kaguya322/projects/remix-buckwheat/app/root.tsx", "../app/components/Header/index.tsx", "/home/kaguya322/projects/remix-buckwheat/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { CacheProvider } from '@emotion/react'\nimport createEmotionServer from '@emotion/server/create-instance'\nimport type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nimport { ServerStyleContext } from './context'\nimport createEmotionCache from './createEmotionCache'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  )\n\n  const chunks = extractCriticalToChunks(html)\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import React, { createContext } from 'react'\n\nexport interface ServerStyleContextData {\n  key: string\n  ids: Array<string>\n  css: string\n}\n\nexport const ServerStyleContext = createContext<\n  ServerStyleContextData[] | null\n>(null)\n\nexport interface ClientStyleContextData {\n  reset: () => void\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n  null\n)\n", "import createCache from '@emotion/cache'\n\nexport default function createEmotionCache() {\n  return createCache({ key: 'css' })\n}\n", "import { ChakraProvider } from '@chakra-ui/react'\nimport { withEmotionCache } from '@emotion/react'\nimport type { LinksFunction, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\nimport React, { useContext, useEffect } from 'react'\n\nimport { Header } from './components/Header'\nimport { ClientStyleContext, ServerStyleContext } from './context'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n    { rel: 'preconnect', href: 'https://fonts.gstaticom' },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap',\n    },\n  ]\n}\n\ninterface DocumentProps {\n  children: React.ReactNode\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext)\n    const clientStyleData = useContext(ClientStyleContext)\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head\n      // re-inject tags\n      const tags = emotionCache.sheet.tags\n      emotionCache.sheet.flush()\n      tags.forEach((tag) => {\n        ;(emotionCache.sheet as any)._insertTag(tag)\n      })\n      // reset cache to reapply global styles\n      clientStyleData?.reset()\n    }, [])\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(' ')}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </body>\n      </html>\n    )\n  }\n)\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider>\n        <Header />\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  )\n}\n", "import { Flex, Text } from '@chakra-ui/react'\n\nexport const Header = () => {\n  return (\n    <header>\n      <Flex\n        background=\"blue.300\"\n        color=\"white\"\n        height=\"20\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Text fontSize=\"3xl\">Remix buckwheat</Text>\n      </Flex>\n    </header>\n  )\n}\n", "import { Button, Container, FormControl, Input } from '@chakra-ui/react'\nimport type { ActionFunction, LoaderFunction } from '@remix-run/node'\nimport { Form } from '@remix-run/react'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const test = url.searchParams.get('test')\n  console.log('working', test)\n  return null\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData()\n  console.log('working', formData)\n  return null\n}\n\nexport default function Index() {\n  return (\n    <main>\n      <Container maxW=\"1400px\">\n        <Form method=\"get\">\n          <FormControl marginBottom=\"16px\">\n            <Input id=\"test\" name=\"test\" />\n          </FormControl>\n\n          <Button type=\"submit\">Search</Button>\n        </Form>\n      </Container>\n    </main>\n  )\n}\n", "export default {'version':'a476390c','entry':{'module':'/build/entry.client-3GVSX2E4.js','imports':['/build/_shared/chunk-JZ7AV35S.js','/build/_shared/chunk-UCMKW27Q.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-OEXIRWYL.js','imports':['/build/_shared/chunk-GYQO3IFW.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-KHAQYQUH.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-A476390C.js'};", "\nimport * as entryServer from \"/home/kaguya322/projects/remix-buckwheat/app/entry.server.tsx\";\nimport * as route0 from \"/home/kaguya322/projects/remix-buckwheat/app/root.tsx\";\nimport * as route1 from \"/home/kaguya322/projects/remix-buckwheat/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
